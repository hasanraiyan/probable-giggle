<%- include('partials/header', { title: 'Site Details' }) %>

<div class="mb-6">
  <a href="/" class="inline-flex items-center text-slate-600 hover:text-slate-800 font-medium transition-colors">
    <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
  </a>
</div>

<div class="space-y-8">
  <!-- Site Overview Card -->
  <div class="glass-effect p-6 rounded-xl border border-white/20 shadow-lg">
    <div class="flex items-start justify-between mb-6">
      <div class="flex-1">
        <h2 class="text-2xl font-semibold mb-2 text-slate-900">Site Overview</h2>
        <div class="flex items-center space-x-3">
          <a href="<%= site.url %>" target="_blank" rel="noopener noreferrer" class="text-primary-600 hover:text-primary-700 font-medium text-lg break-all transition-colors">
            <i class="fas fa-external-link-alt mr-2"></i><%= site.url %>
          </a>
          <% if (site.is_paused) { %>
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800">
              <i class="fas fa-pause mr-2"></i>Monitoring Paused
            </span>
          <% } else { %>
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
              <i class="fas fa-heartbeat mr-2"></i>Active Monitoring
            </span>
          <% } %>
        </div>
      </div>
      <div class="flex space-x-3">
        <form action="/check/<%= site.id %>" method="POST">
          <button type="submit" class="bg-primary-100 hover:bg-primary-200 text-primary-700 font-semibold py-2 px-4 rounded-lg transition-colors <%= site.is_paused ? 'opacity-50 cursor-not-allowed' : '' %>" <%= site.is_paused ? 'disabled' : '' %>>
            <i class="fas fa-sync mr-2"></i>Check Now
          </button>
        </form>
        <form action="/site/<%= site.id %>/toggle-pause" method="POST">
          <button type="submit" class="bg-yellow-100 hover:bg-yellow-200 text-yellow-700 font-semibold py-2 px-4 rounded-lg transition-colors">
            <i class="fas fa-<%= site.is_paused ? 'play' : 'pause' %> mr-2"></i><%= site.is_paused ? 'Resume' : 'Pause' %>
          </button>
        </form>
      </div>
    </div>

    <!-- Quick Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
      <div class="bg-white/50 p-4 rounded-lg text-center">
        <p class="text-sm text-slate-500 mb-1">Total Checks</p>
        <p class="text-2xl font-bold text-slate-900" id="total-checks"><%= logs.length %></p>
      </div>
      <div class="bg-white/50 p-4 rounded-lg text-center">
        <p class="text-sm text-slate-500 mb-1">Successful</p>
        <p class="text-2xl font-bold text-green-600" id="successful-checks"><%= logs.filter(log => log.status === 'UP').length %></p>
      </div>
      <div class="bg-white/50 p-4 rounded-lg text-center">
        <p class="text-sm text-slate-500 mb-1">Failed</p>
        <p class="text-2xl font-bold text-red-600" id="failed-checks"><%= logs.filter(log => log.status === 'DOWN').length %></p>
      </div>
      <div class="bg-white/50 p-4 rounded-lg text-center">
        <p class="text-sm text-slate-500 mb-1">Avg Response</p>
        <p class="text-2xl font-bold text-slate-900" id="avg-response">
          <% 
            const responseTimes = logs.filter(log => log.response_time !== null).map(log => log.response_time);
            const avgResponse = responseTimes.length > 0 ? Math.round(responseTimes.reduce((a, b) => a + b, 0) / responseTimes.length) : 0;
          %>
          <%= avgResponse > 0 ? `${avgResponse}ms` : '—' %>
        </p>
      </div>
    </div>

    <!-- Response Time Chart -->
    <div class="bg-white/50 p-4 rounded-lg">
      <h3 class="text-lg font-semibold text-slate-800 mb-4">Response Time Trend (Last 24 Hours)</h3>
      <div class="h-64">
        <canvas id="responseTimeChart"></canvas>
      </div>
    </div>
  </div>

  <!-- Log History -->
  <div class="glass-effect p-6 rounded-xl border border-white/20 shadow-lg">
    <div class="flex items-center justify-between mb-6">
      <h3 class="text-xl font-semibold text-slate-800">Recent Log History</h3>
      <div class="flex items-center space-x-3">
        <button id="refresh-logs" class="bg-white/50 hover:bg-white/80 text-slate-700 font-semibold py-2 px-4 rounded-lg transition-all text-sm border border-white/30 hover:border-white/50">
          <i class="fas fa-sync-alt mr-2"></i>Refresh
        </button>
        <select id="log-filter" class="bg-white/50 border border-white/30 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500">
          <option value="all">All Logs</option>
          <option value="UP">Successful Only</option>
          <option value="DOWN">Failed Only</option>
        </select>
      </div>
    </div>

    <div class="overflow-x-auto border border-white/30 rounded-lg bg-white/60 backdrop-blur-sm">
      <table class="min-w-full" id="logs-table">
        <thead class="bg-white/80">
          <tr>
            <th class="py-3 px-4 text-left font-semibold text-slate-700">Status</th>
            <th class="py-3 px-4 text-left font-semibold text-slate-700">Response Time</th>
            <th class="py-3 px-4 text-left font-semibold text-slate-700">Details</th>
            <th class="py-3 px-4 text-left font-semibold text-slate-700">Checked At</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-white/30" id="logs-tbody">
          <% if (logs.length > 0) { %>
            <% logs.forEach((log, index) => { %>
              <tr class="hover:bg-white/50 transition-colors <%= index >= 50 ? 'hidden' : '' %>" data-status="<%= log.status %>">
                <td class="py-3 px-4">
                  <% if (log.status === 'UP') { %>
                    <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <i class="fas fa-check-circle mr-1"></i>UP
                    </span>
                  <% } else { %>
                    <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      <i class="fas fa-times-circle mr-1"></i>DOWN
                    </span>
                  <% } %>
                </td>
                <td class="py-3 px-4 text-slate-600">
                  <% if (log.response_time !== null) { %>
                    <span class="<%= log.response_time > 1000 ? 'text-red-600' : log.response_time > 500 ? 'text-yellow-600' : 'text-green-600' %>">
                      <%= log.response_time %> ms
                    </span>
                  <% } else { %>
                    <span class="text-slate-400">—</span>
                  <% } %>
                </td>
                <td class="py-3 px-4 text-sm text-slate-500 max-w-xs truncate" title="<%= log.details %>">
                  <%= log.details %>
                </td>
                <td class="py-3 px-4 text-slate-600">
                  <div class="flex flex-col">
                    <span><%= new Date(log.checked_at).toLocaleDateString() %></span>
                    <span class="text-xs text-slate-400"><%= new Date(log.checked_at).toLocaleTimeString() %></span>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="4" class="py-12 px-4 text-center text-slate-500">
                <div class="w-16 h-16 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <i class="fas fa-chart-line text-slate-400 text-2xl"></i>
                </div>
                <p class="font-semibold text-slate-900 mb-2">No logs found for this site yet</p>
                <p class="text-sm text-slate-500">The first check should run shortly after adding the site.</p>
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <% if (logs.length > 50) { %>
      <div class="mt-4 text-center">
        <button id="load-more" class="bg-primary-100 hover:bg-primary-200 text-primary-700 font-semibold py-2 px-6 rounded-lg transition-colors">
          <i class="fas fa-chevron-down mr-2"></i>Load More Logs
        </button>
      </div>
    <% } %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Chart.js setup for response time trend
  const ctx = document.getElementById('responseTimeChart').getContext('2d');
  const logs = <%- JSON.stringify(logs.slice(0, 50).reverse()) %>;
  
  const chartData = logs.map(log => ({
    x: new Date(log.checked_at),
    y: log.response_time || 0,
    status: log.status
  }));

  new Chart(ctx, {
    type: 'line',
    data: {
      datasets: [{
        label: 'Response Time (ms)',
        data: chartData,
        borderColor: 'rgb(59, 130, 246)',
        backgroundColor: 'rgba(59, 130, 246, 0.1)',
        borderWidth: 2,
        fill: true,
        tension: 0.4,
        pointBackgroundColor: chartData.map(point => point.status === 'UP' ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'),
        pointBorderColor: chartData.map(point => point.status === 'UP' ? 'rgb(34, 197, 94)' : 'rgb(239, 68, 68)'),
        pointRadius: 4,
        pointHoverRadius: 6
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          display: false
        },
        tooltip: {
          callbacks: {
            label: function(context) {
              const point = context.raw;
              return `${point.y}ms (${point.status})`;
            }
          }
        }
      },
      scales: {
        x: {
          type: 'time',
          time: {
            unit: 'hour',
            displayFormats: {
              hour: 'HH:mm'
            }
          },
          title: {
            display: true,
            text: 'Time'
          }
        },
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Response Time (ms)'
          }
        }
      }
    }
  });

  // Log filtering
  const logFilter = document.getElementById('log-filter');
  const logRows = document.querySelectorAll('#logs-tbody tr[data-status]');
  
  logFilter.addEventListener('change', () => {
    const filterValue = logFilter.value;
    logRows.forEach(row => {
      if (filterValue === 'all' || row.dataset.status === filterValue) {
        row.classList.remove('hidden');
      } else {
        row.classList.add('hidden');
      }
    });
  });

  // Load more functionality
  const loadMoreBtn = document.getElementById('load-more');
  if (loadMoreBtn) {
    let currentlyShown = 50;
    loadMoreBtn.addEventListener('click', () => {
      const hiddenRows = document.querySelectorAll('#logs-tbody tr.hidden[data-status]');
      const toShow = Array.from(hiddenRows).slice(0, 50);
      toShow.forEach(row => row.classList.remove('hidden'));
      
      currentlyShown += toShow.length;
      if (hiddenRows.length <= 50) {
        loadMoreBtn.style.display = 'none';
      }
    });
  }

  // Refresh logs
  const refreshBtn = document.getElementById('refresh-logs');
  refreshBtn.addEventListener('click', () => {
    location.reload();
  });
});
</script>

<%- include('partials/footer') %>
